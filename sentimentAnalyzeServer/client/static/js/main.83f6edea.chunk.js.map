{"version":3,"sources":["EmotionTable.js","App.js","reportWebVitals.js","index.js"],"names":["EmotionTable","emotion","this","props","emotions","document","className","Object","entries","map","data","React","Component","App","state","innercomp","rows","cols","id","mode","sentimentOutput","sentiment","renderTextArea","getElementById","value","setState","renderTextBox","sendForSentimentAnalysis","url","axios","get","then","response","output","console","log","label","style","color","fontSize","score","catch","err","sendForEmotionAnalysis","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.83f6edea.chunk.js","sourcesContent":["import React from 'react';\nimport './bootstrap.min.css';\n\nclass EmotionTable extends React.Component {\n    render() {\n        const { emotion: { document: { emotion } } } = this.props.emotions;\n        return (\n            <div>\n                <table className=\"table table-bordered table-striped w-100 my-3\">\n                    <thead className=\"thead-light\">\n\n                        <tr >\n                            <th>Emotions</th>\n                            <th>Score</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {Object.entries(emotion).map(data => (\n                            <tr>\n                                <td>{data[0]}</td>\n                                <td>{data[1] ? data[1] : 0}</td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n\n}\nexport default EmotionTable;\n","import './bootstrap.min.css';\nimport './App.css';\nimport EmotionTable from './EmotionTable.js';\nimport React from 'react';\nimport axios from 'axios';\n\nclass App extends React.Component {\n  state = {innercomp:<textarea rows=\"4\" cols=\"50\" id=\"textinput\"/>,\n            mode: \"text\",\n          sentimentOutput:[],\n          sentiment:true\n        }\n  \n  renderTextArea = ()=>{\n    document.getElementById(\"textinput\").value = \"\";\n    if(this.state.mode === \"url\") {\n      this.setState({innercomp:<textarea rows=\"4\" cols=\"50\" id=\"textinput\"/>,\n      mode: \"text\",\n      sentimentOutput:[],\n      sentiment:true\n    })\n    } \n  }\n\n  renderTextBox = ()=>{\n    document.getElementById(\"textinput\").value = \"\";\n    if(this.state.mode === \"text\") {\n      this.setState({innercomp:<textarea rows=\"1\" cols=\"50\" id=\"textinput\"/>,\n      mode: \"url\",\n      sentimentOutput:[],\n      sentiment:true\n    })\n    }\n  }\n\n  sendForSentimentAnalysis = () => {\n    this.setState({sentiment:true});\n    let ret = \"\";\n    let url = \".\";\n\n    if(this.state.mode === \"url\") {\n      url = url+\"/url/sentiment?url=\"+document.getElementById(\"textinput\").value;\n    } else {\n      url = url+\"/text/sentiment?text=\"+document.getElementById(\"textinput\").value;\n    }\n    ret = axios.get(url);\n    ret.then((response)=>{\n\n      //Include code here to check the sentiment and fomrat the data accordingly\n\n    //   this.setState({sentimentOutput:response.data});\n      let output = response.data;\n      const sentiment = output.sentiment.document;\n\n      console.log(\"OUTPUT =>\", output,\"\\n SENTIMENT => \" ,  sentiment  );\n      \n      if(sentiment.label === \"positive\") {\n        output = <div style={{color:\"green\",fontSize:20}}>{sentiment.score+ \" : \" +sentiment.label}</div>\n      } else if (sentiment.label === \"negative\"){\n        output = <div style={{color:\"red\",fontSize:20}}>{sentiment.score+ \" : \" +sentiment.label}</div>\n      } else {\n        output = <div style={{color:\"orange\",fontSize:20}}>{sentiment.score+ \" : \" +sentiment.label}</div>\n      }\n      this.setState({sentimentOutput:output});\n    })\n    .catch(err => console.log(err))\n  }\n\n  sendForEmotionAnalysis = () => {\n    this.setState({sentiment:false});\n    let ret = \"\";\n    let url = \".\";\n    if(this.state.mode === \"url\") {\n      url = url+\"/url/emotion?url=\"+document.getElementById(\"textinput\").value;\n    } else {\n      url = url+\"/text/emotion/?text=\"+document.getElementById(\"textinput\").value;\n    }\n    ret = axios.get(url);\n\n    ret.then((response)=>{\n        this.setState({sentimentOutput:<EmotionTable emotions={response.data}/>});\n  });\n  }\n  \n\n  render() {\n    return (  \n      <div className=\"App container\">\n      <button className=\"btn btn-info\" onClick={this.renderTextArea}>Text</button>\n        <button className=\"btn btn-dark\"  onClick={this.renderTextBox}>URL</button>\n        <br/><br/>\n        {this.state.innercomp}\n        <br/>\n        <button className=\"btn-primary\" onClick={this.sendForSentimentAnalysis}>Analyze Sentiment</button>\n        <button className=\"btn-primary\" onClick={this.sendForEmotionAnalysis}>Analyze Emotion</button>\n        <br/>\n            {this.state.sentimentOutput}\n      </div>\n    );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}